<form class="form-panel">
    <div class="row">
        <div class=" col-lg-3 justify-content-center">
            <img src='images/logoUIsrael3.png'/>
        </div>
        <div class=" col-lg-3 justify-content-center">
            <h6><b>MODULACIÓN POR DESPLAZAMIENTO DE FASE 8-PSK</b></h6>
            <h6 class="text-justify">
                Forma de modulación digital que consiste en cambiar la amplitud de una onda portadora (una sinusoide)
                entre dos valores posibles.
            </h6>
            <div class="text-right ">
                <button class="btn btn-labeled btn-primary" id="epskRedraw" type="button">
                    <span class="btn-label"><i class="fa fa-check" id="epskRedrawIcon"></i></span>|graficar
                </button>
            </div>
        </div>

        <div class="col-lg-5 text-center">
            <div class="row label-section-top ">
                <div class="col-lg-3 nopadding text-center">
                    <span class="badge badge-danger">PORTADORA|MODULADORA</span>
                </div>
                <div class="col-lg-6 text-center">
                    <span class="badge badge-success">SEÑAL PORTADORA</span>
                </div>
                <div class="col-lg-3 nopadding text-center">
                    <span class="badge badge-info">SEÑAL MODULADORA</span>
                </div>
            </div>
            <div class="row">
                <div class="col-lg-3 text-center">
                    <input id="amp_FSK" type="text" value="4"/>
                    <span class="badge badge-danger">Amplitud</span>
                </div>
                <!--SEÑAL PORTADORA-->
                <div class="col-lg-3 text-center">
                    <input id="frec_FSK" type="text" value="20"/>
                    <span class="badge badge-success">Frecuencia</span>
                </div>
                <div class="col-lg-3 text-center">
                    <input id="desv_FSK" type="text" value="10"/>
                    <span class="badge badge-success">Desviacion</span>
                </div>
                <!--SEÑAL MODULADORA-->
                <div class="col-lg-3 text-center">
                    <input id="frecMD_FSK" type="text" value="4"/>
                    <span class="badge badge-info">Frecuencia</span>
                </div>
            </div>
            <div class="row">
                <div class="col-lg-3 ">

                </div>
                <div class="col-lg-6 text-center nopadding">
                    <span class="badge badge-success fontSize">Freq.Espacio: <span class="badge badge-light fontSize"
                                                                                   id="freEsp_FSK">10Hz</span></span>
                    <span class="badge badge-success fontSize">Freq. Marca: <span class="badge badge-light fontSize"
                                                                                  id="freMarc_FSK">30Hz</span></span>
                </div>
                <div class="col-lg-3 nopadding text-center">
                </div>
            </div>
        </div>
    </div>
</form>
<div class="scrollContent">
    <div class='row trunk-section' style="margin-right: 1px;">
        <div class='col-lg-10' id='e_psk_port_sen'/>
        <div class="col-lg-2">
        <span class="description">
          <h5>PORT. SEN</h5>
               <h6 class="text-justify">
                   Forma de modulación digital que consiste en cambiar la amplitud de una onda portadora entre dos valores posibles.
               </h6>
        </span>
        </div>
    </div>
    <div class='row trunk-section' style="margin-right: 4px;">
        <div class='col-lg-10' id='e_psk_port_cos'/>
        <div class="col-lg-2">
         <span>
          <h5>PORT. COS</h5>
               <h6 class="text-justify">
                   Forma de modulación digital que consiste en cambiar la amplitud de una onda portadora (una sinusoide) entre dos valores posibles.
               </h6>
        </span>
        </div>
    </div>
    <div class='row trunk-section' style="margin-right: 4px;">
        <div class='col-lg-10' id='e_psk_freq_bit'/>
        <div class="col-lg-2">
         <span>
          <h5>FREQ BIT</h5>
               <h6 class="text-justify">
                   Forma de modulación digital que consiste en cambiar la amplitud de una onda portadora (una sinusoide) entre dos valores posibles.
               </h6>
        </span>
        </div>
    </div>


    <div class='row trunk-section' style="margin-right: 4px;">
        <div class='col-lg-10' id='e_psk_ic'/>
        <div class="col-lg-2">
        <span>
          <h5>IC</h5>
               <h6 class="text-justify">
                   Forma de modulación digital que consiste en cambiar la amplitud de una onda portadora (una sinusoide) entre dos valores posibles.
               </h6>
        </span>
            <h6 class='text-center' id="e_psk_title_ic"/>
        </div>
    </div>

    <div class='row trunk-section' style="margin-right: 4px;">
        <div class='col-lg-10' id='e_psk_canal_i'/>
        <div class="col-lg-2">
        <span>
          <h5>CANA I</h5>
               <h6 class="text-justify">
                   Forma de modulación digital que consiste en cambiar la amplitud de una onda portadora (una sinusoide) entre dos valores posibles.
               </h6>
        </span>
            <h6 class='text-center' id="e_psk_title_canal_i"/>
        </div>
    </div>
    <div class='row trunk-section' style="margin-right: 4px;">
        <div class='col-lg-10' id='e_psk_qc'/>
        <div class="col-lg-2">
        <span>
          <h5>QC</h5>
               <h6 class="text-justify">
                   Forma de modulación digital que consiste en cambiar la amplitud de una onda portadora (una sinusoide) entre dos valores posibles.
               </h6>
        </span>
            <h6 class='text-center' id="e_psk_title_qc"/>
        </div>
    </div>
    <div class='row trunk-section' style="margin-right: 4px;">
        <div class='col-lg-10' id='e_psk_canal_q'/>
        <div class="col-lg-2">
        <span>
          <h5>CANAL Q</h5>
               <h6 class="text-justify">
                   Forma de modulación digital que consiste en cambiar la amplitud de una onda portadora (una sinusoide) entre dos valores posibles.
               </h6>
        </span>
            <h6 class='text-center' id="e_psk_title_canal_q"/>
        </div>
    </div>
    <div class='row trunk-section' style="margin-right: 4px;">
        <div class='col-lg-10' id='e_psk_full'/>
        <div class="col-lg-2">
        <span>
          <h5>8-PSK</h5>
               <h6 class="text-justify">
                   Forma de modulación digital que consiste en cambiar la amplitud de una onda portadora (una sinusoide) entre dos valores posibles.
               </h6>
        </span>
            <h6 class='text-center' id="e_psk_title_full"/>
        </div>
    </div>
</div>

<script>
    'use strict';
    var dw8pskPortSen, dw8pskPortCos, dw8pskFreqBit, dw8pskIC, dw8pskCanalI, dw8pskQCp, dw8pskCanalQ, dw8pskFull;
    var dw8PSKEnd = 0;

    $('#epskRedraw ').click(function () {
        $("#epskRedrawIcon").removeClass().addClass('fa fa-refresh fa-spin');
        loading();
        setTimeout(function () {
            dibujar(
                false,
                1, 1, 1,
                3, 1.5, 0.75, 0.375,
                0.541, 1.307
            );
        }, 10);
    });


    (function () {
        dw8pskPortSen = template8PSK('#e_psk_port_sen', 'Port.Sen', 'PortSen', [9]);
        dw8pskPortCos = template8PSK('#e_psk_port_cos', 'Port.Cos', 'PortCos', [8]);
        dw8pskFreqBit = template8PSK('#e_psk_freq_bit', 'Freq Bit', 'FreqBit', [7]);
        dw8pskIC = template8PSK('#e_psk_ic', 'IC', 'IC', [6]);
        dw8pskCanalI = template8PSK('#e_psk_canal_i', 'CanalI', 'CanalI', [5]);
        dw8pskQCp = template8PSK('#e_psk_qc', 'QC""', 'QCPrima', [4]);
        dw8pskCanalQ = template8PSK('#e_psk_canal_q', 'CanalQ', 'CanalQ', [3]);
        dw8pskFull = template8PSK('#e_psk_full', 'Freq Bit/8PSK', 'Valor', [7, 2]);
        dw8pskFull.legend = ['FREQ BIT', '8 PSK'];
        dw8pskFull.legend_target = '#e_psk_title_full';

        // dw8pskPortSen.inflator=1.8 ;
        // dw8pskPortCos.inflator=1.8 ;
        // dw8pskFreqBit.inflator=1.8 ;
        // dw8pskPortSen.inflator=1.8 ;


        dibujar(
            false,
            1, 1, 1,
            3, 1.5, 0.75, 0.375,
            0.541, 1.307
        );
    })();
    function deleteData8psk() {
        delete dw8pskPortSen.data;
        delete dw8pskPortCos.data;
        delete dw8pskFreqBit.data;
        delete dw8pskIC.data;
        delete dw8pskCanalI.data;
        delete dw8pskQCp.data;
        delete dw8pskCanalQ.data;
    }
    function completo() {
        if (dw8PSKEnd = 7) {
            dismiss();
            $("#epskRedrawIcon").removeClass().addClass('fa fa-check');
        }
    }

    function dibujarControles8PSK() {
        $("#amp_FSK").knob(
            confAmpPortadora
        );
        //confFrecPortadora.release = eventoFreq;
        $("#frec_FSK").knob(
            confFrecPortadora
        );
        //confDesvPortadora.release = eventoDesv;
        $("#desv_FSK").knob(
            confDesvPortadora
        );

        $("#frecMD_FSK").knob(
            confFrecModuladora
        );
    }

    function template8PSK(renderID, yLabel, yAixsValue, lineColor) {
        return {
            inflator: 1.6,
            point_size: 4.5,
            top: 10,
            active_point_size: 10,
            width: 900,
            height: 150,
            right: 1,
            data: [],
            missing_is_hidden: true,
            active_point_on_lines: true,
            y_extended_ticks: true,
            x_extended_ticks: true,
            animate_on_load: true,
            area: false,
            x_accessor: 'Tiempo',
            x_label: 'Tiempo',
            custom_line_color_map: lineColor,
            target: renderID,
            y_accessor: yAixsValue,
            y_label: yLabel
        }
    }

    function dibujar(

        redibujar,
        amplitud,
        amplitudI,
        amplitudQ,
        frecuencia,
        frecuenciaC,
        frecuenciaI,
        frecuenciaQ,
        bitC0L,
        bitC1L
    ) {
        dw8PSKEnd = 0;
        let Tiempo;
        let TiempoMin = 0;
        let TiempoMax = 1440;

        let portSen = 0;
        let portCos = 0;
        let freqBit = 0;
        let bitC = 0;
        let bitC_prima = 0;
        let bitI = 0;
        let bitQ = 0;
        let iC = 0;
        let qC_prima = 0;
        let canalI = 0;
        let canalQ = 0;
        let eightPSK = 0;
        let data8PSK = [];
        let data8PSKfreqBit = [];
        let data8PSKFull = [];
        for (Tiempo = TiempoMin; Tiempo <= TiempoMax; Tiempo++) {

            portSen = (amplitud) * (SIN(RADIANS(Tiempo * frecuencia)));
            portCos = (amplitud) * (COS(RADIANS(Tiempo * frecuencia)));
            freqBit = ((amplitudI) * SIN(RADIANS(frecuenciaC * Tiempo))) > 0 ? (-1) * amplitudI : amplitudI;
            bitC = (amplitudQ * SIN(RADIANS(frecuenciaC * Tiempo))) > 0 ? bitC0L : bitC1L;
            bitC_prima = (amplitudQ * SIN(RADIANS(frecuenciaC * Tiempo))) > 0 ? bitC1L : bitC0L;
            bitI = (amplitudI * SIN(RADIANS(frecuenciaI * Tiempo)) > 0) ? (-1) * amplitudI : amplitudI;
            bitQ = (amplitudI * SIN(RADIANS(frecuenciaQ * Tiempo)) > 0) ? (-1) * amplitudI : amplitudI;
            iC = bitC * bitI;
            qC_prima = bitC_prima * bitQ;
            canalI = iC * portSen;
            canalQ = qC_prima * portCos;
            eightPSK = canalI + canalQ;

            data8PSK.push({
                "Tiempo": Tiempo,
                "PortSen": portSen,
                "PortCos": portCos,
                "FreqBit": freqBit,
                "BitC": bitC,
                "BitCPrima": bitC_prima,
                "BitI": bitI,
                "BitQ": bitQ,
                "IC": iC,
                "QCPrima": qC_prima,
                "CanalI": canalI,
                "CanalQ": canalQ,
                "8PSK": eightPSK
            });
            data8PSKfreqBit.push({
                "Tiempo": Tiempo,
                "Valor": freqBit
            });
            data8PSKFull.push({
                "Tiempo": Tiempo,
                "Valor": eightPSK
            });
        }
        deleteData8psk();
        dw8pskPortSen.data = data8PSK;
        dw8pskPortCos.data = data8PSK;
        dw8pskFreqBit.data = data8PSK;
        dw8pskIC.data = data8PSK;
        dw8pskCanalI.data = data8PSK;
        dw8pskQCp.data = data8PSK;
        dw8pskCanalQ.data = data8PSK;
        dw8pskFull.data = [data8PSKfreqBit, data8PSKFull];

        MG.data_graphic(dw8pskPortSen);
        MG.data_graphic(dw8pskPortCos);
        MG.data_graphic(dw8pskFreqBit);
        MG.data_graphic(dw8pskIC);
        MG.data_graphic(dw8pskCanalI);
        MG.data_graphic(dw8pskQCp);
        MG.data_graphic(dw8pskCanalQ);
        MG.data_graphic(dw8pskFull);
        d3.selectAll("#e_psk_port_sen ,#e_psk_port_cos ,#e_psk_freq_bit ,#e_psk_ic ,#e_psk_canal_i ,#e_psk_qc ,#e_psk_canal_q ,#e_psk_full ").transition().on("end", function () {
            completo();
        });

    }

</script>
